/*
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'buildlogic.java-application-conventions'
    id 'org.graalvm.buildtools.native' version '0.11.0'
}

dependencies {
    implementation project(':elisp')

    implementation 'org.jline:jline:3.26.3'
    implementation 'info.picocli:picocli:4.7.6'
    runtimeOnly "org.graalvm.polyglot:inspect-community:${truffleVersion}"
}

application {
    mainClass = 'party.iroiro.juicemacs.juice.ELispRepl'
}

tasks.run.configure {
    standardInput = System.in
}

tasks.register('jvmCmd') {
    dependsOn tasks.run.taskDependencies
    dependsOn tasks.compileJava.taskDependencies

    doLast {
        var classpath = tasks.run.classpath
        var graalRuntimeArgs = graalArgs.collect { "\"${((String) it).replace("\"", "\\\"")}\"" }.join(" ")
        var cmd = "java ${graalRuntimeArgs} -cp ${classpath.asPath} ${application.mainClass.get()}"
        println(cmd)
    }
}

graalvmNative {
    toolchainDetection = true
    binaries {
        main {
            imageName = 'elisp-repl'
            mainClass = application.mainClass
            richOutput = true
            quickBuild = true
            verbose = true
            buildArgs.add('--diagnostics-mode')
        }
    }
}
