plugins {
    id 'buildlogic.java-application-conventions'
    id 'org.graalvm.buildtools.native' version '0.11.0'
}

dependencies {
    implementation project(':elisp')

    implementation libs.jline
    implementation libs.picocli.lib
    annotationProcessor libs.picocli.codegen
    runtimeOnly libs.graalvm.inspect
}

application {
    mainClass = 'party.iroiro.juicemacs.juice.ELispRepl'
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

tasks.run.configure {
    standardInput = System.in
}

tasks.register('jvmCmd') {
    dependsOn tasks.run.taskDependencies
    dependsOn tasks.compileJava.taskDependencies

    doLast {
        var classpath = tasks.run.classpath
        var graalRuntimeArgs = graalArgs.collect { "\"${((String) it).replace("\"", "\\\"")}\"" }.join(" ")
        var cmd = "java ${graalRuntimeArgs} -cp ${classpath.asPath} ${application.mainClass.get()}"
        println(cmd)
    }
}

graalvmNative {
    toolchainDetection = true
    binaries {
        main {
            imageName = 'elisp-repl'
            mainClass = application.mainClass
            richOutput = true
            verbose = true
            buildArgs.add('--diagnostics-mode')
        }
    }
}
