package party.iroiro.juicemacs.elisp.nodes.bytecode;

import com.oracle.truffle.api.CompilerDirectives;

/**
 * Generated by {@code extract-emacs-bytecode.py} from {@code src/bytecode.c}
 * @noinspection OctalInteger
 */
@SuppressWarnings("PMD")
public abstract class ByteCode {
    private ByteCode() {}

    public final static byte STACK_REF                     = 0;
    public final static byte STACK_REF1                    = 1;
    public final static byte STACK_REF2                    = 2;
    public final static byte STACK_REF3                    = 3;
    public final static byte STACK_REF4                    = 4;
    public final static byte STACK_REF5                    = 5;
    public final static byte STACK_REF6                    = 6;
    public final static byte STACK_REF7                    = 7;
    public final static byte VARREF                        = 010;
    public final static byte VARREF1                       = 011;
    public final static byte VARREF2                       = 012;
    public final static byte VARREF3                       = 013;
    public final static byte VARREF4                       = 014;
    public final static byte VARREF5                       = 015;
    public final static byte VARREF6                       = 016;
    public final static byte VARREF7                       = 017;
    public final static byte VARSET                        = 020;
    public final static byte VARSET1                       = 021;
    public final static byte VARSET2                       = 022;
    public final static byte VARSET3                       = 023;
    public final static byte VARSET4                       = 024;
    public final static byte VARSET5                       = 025;
    public final static byte VARSET6                       = 026;
    public final static byte VARSET7                       = 027;
    public final static byte VARBIND                       = 030;
    public final static byte VARBIND1                      = 031;
    public final static byte VARBIND2                      = 032;
    public final static byte VARBIND3                      = 033;
    public final static byte VARBIND4                      = 034;
    public final static byte VARBIND5                      = 035;
    public final static byte VARBIND6                      = 036;
    public final static byte VARBIND7                      = 037;
    public final static byte CALL                          = 040;
    public final static byte CALL1                         = 041;
    public final static byte CALL2                         = 042;
    public final static byte CALL3                         = 043;
    public final static byte CALL4                         = 044;
    public final static byte CALL5                         = 045;
    public final static byte CALL6                         = 046;
    public final static byte CALL7                         = 047;
    public final static byte UNBIND                        = 050;
    public final static byte UNBIND1                       = 051;
    public final static byte UNBIND2                       = 052;
    public final static byte UNBIND3                       = 053;
    public final static byte UNBIND4                       = 054;
    public final static byte UNBIND5                       = 055;
    public final static byte UNBIND6                       = 056;
    public final static byte UNBIND7                       = 057;
    public final static byte POPHANDLER                    = 060;
    public final static byte PUSHCONDITIONCASE             = 061;
    public final static byte PUSHCATCH                     = 062;
    public final static byte NTH                           = 070;
    public final static byte SYMBOLP                       = 071;
    public final static byte CONSP                         = 072;
    public final static byte STRINGP                       = 073;
    public final static byte LISTP                         = 074;
    public final static byte EQ                            = 075;
    public final static byte MEMQ                          = 076;
    public final static byte NOT                           = 077;
    public final static byte CAR                           = 0100;
    public final static byte CDR                           = 0101;
    public final static byte CONS                          = 0102;
    public final static byte LIST1                         = 0103;
    public final static byte LIST2                         = 0104;
    public final static byte LIST3                         = 0105;
    public final static byte LIST4                         = 0106;
    public final static byte LENGTH                        = 0107;
    public final static byte AREF                          = 0110;
    public final static byte ASET                          = 0111;
    public final static byte SYMBOL_VALUE                  = 0112;
    public final static byte SYMBOL_FUNCTION               = 0113;
    public final static byte SET                           = 0114;
    public final static byte FSET                          = 0115;
    public final static byte GET                           = 0116;
    public final static byte SUBSTRING                     = 0117;
    public final static byte CONCAT2                       = 0120;
    public final static byte CONCAT3                       = 0121;
    public final static byte CONCAT4                       = 0122;
    public final static byte SUB1                          = 0123;
    public final static byte ADD1                          = 0124;
    public final static byte EQLSIGN                       = 0125;
    public final static byte GTR                           = 0126;
    public final static byte LSS                           = 0127;
    public final static byte LEQ                           = 0130;
    public final static byte GEQ                           = 0131;
    public final static byte DIFF                          = 0132;
    public final static byte NEGATE                        = 0133;
    public final static byte PLUS                          = 0134;
    public final static byte MAX                           = 0135;
    public final static byte MIN                           = 0136;
    public final static byte MULT                          = 0137;
    public final static byte POINT                         = 0140;
    public final static byte SAVE_CURRENT_BUFFER_OBSOLETE  = 0141;
    public final static byte GOTO_CHAR                     = 0142;
    public final static byte INSERT                        = 0143;
    public final static byte POINT_MAX                     = 0144;
    public final static byte POINT_MIN                     = 0145;
    public final static byte CHAR_AFTER                    = 0146;
    public final static byte FOLLOWING_CHAR                = 0147;
    public final static byte PRECEDING_CHAR                = 0150;
    public final static byte CURRENT_COLUMN                = 0151;
    public final static byte INDENT_TO                     = 0152;
    public final static byte EOLP                          = 0154;
    public final static byte EOBP                          = 0155;
    public final static byte BOLP                          = 0156;
    public final static byte BOBP                          = 0157;
    public final static byte CURRENT_BUFFER                = 0160;
    public final static byte SET_BUFFER                    = 0161;
    public final static byte SAVE_CURRENT_BUFFER           = 0162;
    public final static byte INTERACTIVE_P                 = 0164;
    public final static byte FORWARD_CHAR                  = 0165;
    public final static byte FORWARD_WORD                  = 0166;
    public final static byte SKIP_CHARS_FORWARD            = 0167;
    public final static byte SKIP_CHARS_BACKWARD           = 0170;
    public final static byte FORWARD_LINE                  = 0171;
    public final static byte CHAR_SYNTAX                   = 0172;
    public final static byte BUFFER_SUBSTRING              = 0173;
    public final static byte DELETE_REGION                 = 0174;
    public final static byte NARROW_TO_REGION              = 0175;
    public final static byte WIDEN                         = 0176;
    public final static byte END_OF_LINE                   = 0177;
    public final static byte CONSTANT2                     = (byte) 0201;
    public final static byte GOTO                          = (byte) 0202;
    public final static byte GOTOIFNIL                     = (byte) 0203;
    public final static byte GOTOIFNONNIL                  = (byte) 0204;
    public final static byte GOTOIFNILELSEPOP              = (byte) 0205;
    public final static byte GOTOIFNONNILELSEPOP           = (byte) 0206;
    public final static byte RETURN                        = (byte) 0207;
    public final static byte DISCARD                       = (byte) 0210;
    public final static byte DUP                           = (byte) 0211;
    public final static byte SAVE_EXCURSION                = (byte) 0212;
    public final static byte SAVE_WINDOW_EXCURSION         = (byte) 0213;
    public final static byte SAVE_RESTRICTION              = (byte) 0214;
    public final static byte CATCH                         = (byte) 0215;
    public final static byte UNWIND_PROTECT                = (byte) 0216;
    public final static byte CONDITION_CASE                = (byte) 0217;
    public final static byte TEMP_OUTPUT_BUFFER_SETUP      = (byte) 0220;
    public final static byte TEMP_OUTPUT_BUFFER_SHOW       = (byte) 0221;
    public final static byte SET_MARKER                    = (byte) 0223;
    public final static byte MATCH_BEGINNING               = (byte) 0224;
    public final static byte MATCH_END                     = (byte) 0225;
    public final static byte UPCASE                        = (byte) 0226;
    public final static byte DOWNCASE                      = (byte) 0227;
    public final static byte STRINGEQLSIGN                 = (byte) 0230;
    public final static byte STRINGLSS                     = (byte) 0231;
    public final static byte EQUAL                         = (byte) 0232;
    public final static byte NTHCDR                        = (byte) 0233;
    public final static byte ELT                           = (byte) 0234;
    public final static byte MEMBER                        = (byte) 0235;
    public final static byte ASSQ                          = (byte) 0236;
    public final static byte NREVERSE                      = (byte) 0237;
    public final static byte SETCAR                        = (byte) 0240;
    public final static byte SETCDR                        = (byte) 0241;
    public final static byte CAR_SAFE                      = (byte) 0242;
    public final static byte CDR_SAFE                      = (byte) 0243;
    public final static byte NCONC                         = (byte) 0244;
    public final static byte QUO                           = (byte) 0245;
    public final static byte REM                           = (byte) 0246;
    public final static byte NUMBERP                       = (byte) 0247;
    public final static byte INTEGERP                      = (byte) 0250;
    public final static byte LISTN                         = (byte) 0257;
    public final static byte CONCATN                       = (byte) 0260;
    public final static byte INSERTN                       = (byte) 0261;
    public final static byte STACK_SET                     = (byte) 0262;
    public final static byte STACK_SET2                    = (byte) 0263;
    public final static byte DISCARDN                      = (byte) 0266;
    public final static byte SWITCH                        = (byte) 0267;
    public final static byte CONSTANT                      = (byte) 0300;

    @CompilerDirectives.CompilationFinal(dimensions = 1)
    public static final byte[] BYTECODE_LENGTHS = new byte[] {
            1, // #o000 (stack-ref)
            1, // #o001 (stack-ref)
            1, // #o002 (stack-ref)
            1, // #o003 (stack-ref)
            1, // #o004 (stack-ref)
            1, // #o005 (stack-ref)
            2, // #o006 (stack-ref)
            3, // #o007 (stack-ref)
            1, // #o010 (varref)
            1, // #o011 (varref)
            1, // #o012 (varref)
            1, // #o013 (varref)
            1, // #o014 (varref)
            1, // #o015 (varref)
            2, // #o016 (varref)
            3, // #o017 (varref)
            1, // #o020 (varset)
            1, // #o021 (varset)
            1, // #o022 (varset)
            1, // #o023 (varset)
            1, // #o024 (varset)
            1, // #o025 (varset)
            2, // #o026 (varset)
            3, // #o027 (varset)
            1, // #o030 (varbind)
            1, // #o031 (varbind)
            1, // #o032 (varbind)
            1, // #o033 (varbind)
            1, // #o034 (varbind)
            1, // #o035 (varbind)
            2, // #o036 (varbind)
            3, // #o037 (varbind)
            1, // #o040 (call)
            1, // #o041 (call)
            1, // #o042 (call)
            1, // #o043 (call)
            1, // #o044 (call)
            1, // #o045 (call)
            2, // #o046 (call)
            3, // #o047 (call)
            1, // #o050 (unbind)
            1, // #o051 (unbind)
            1, // #o052 (unbind)
            1, // #o053 (unbind)
            1, // #o054 (unbind)
            1, // #o055 (unbind)
            2, // #o056 (unbind)
            3, // #o057 (unbind)
            1, // #o060 (pophandler)
            3, // #o061 (pushconditioncase)
            3, // #o062 (pushcatch)
            1, // #o063 (nil)
            1, // #o064 (nil)
            1, // #o065 (nil)
            1, // #o066 (nil)
            1, // #o067 (nil)
            1, // #o070 (nth)
            1, // #o071 (symbolp)
            1, // #o072 (consp)
            1, // #o073 (stringp)
            1, // #o074 (listp)
            1, // #o075 (eq)
            1, // #o076 (memq)
            1, // #o077 (not)
            1, // #o100 (car)
            1, // #o101 (cdr)
            1, // #o102 (cons)
            1, // #o103 (list1)
            1, // #o104 (list2)
            1, // #o105 (list3)
            1, // #o106 (list4)
            1, // #o107 (length)
            1, // #o110 (aref)
            1, // #o111 (aset)
            1, // #o112 (symbol-value)
            1, // #o113 (symbol-function)
            1, // #o114 (set)
            1, // #o115 (fset)
            1, // #o116 (get)
            1, // #o117 (substring)
            1, // #o120 (concat2)
            1, // #o121 (concat3)
            1, // #o122 (concat4)
            1, // #o123 (sub1)
            1, // #o124 (add1)
            1, // #o125 (eqlsign)
            1, // #o126 (gtr)
            1, // #o127 (lss)
            1, // #o130 (leq)
            1, // #o131 (geq)
            1, // #o132 (diff)
            1, // #o133 (negate)
            1, // #o134 (plus)
            1, // #o135 (max)
            1, // #o136 (min)
            1, // #o137 (mult)
            1, // #o140 (point)
            1, // #o141 (save-current-buffer*)
            1, // #o142 (goto-char)
            1, // #o143 (insert)
            1, // #o144 (point-max)
            1, // #o145 (point-min)
            1, // #o146 (char-after)
            1, // #o147 (following-char)
            1, // #o150 (preceding-char)
            1, // #o151 (current-column)
            1, // #o152 (indent-to)
            1, // #o153 (scan-buffer*)
            1, // #o154 (eolp)
            1, // #o155 (eobp)
            1, // #o156 (bolp)
            1, // #o157 (bobp)
            1, // #o160 (current-buffer)
            1, // #o161 (set-buffer)
            1, // #o162 (save-current-buffer)
            1, // #o163 (set-mark*)
            1, // #o164 (interactive-p*)
            1, // #o165 (forward-char)
            1, // #o166 (forward-word)
            1, // #o167 (skip-chars-forward)
            1, // #o170 (skip-chars-backward)
            1, // #o171 (forward-line)
            1, // #o172 (char-syntax)
            1, // #o173 (buffer-substring)
            1, // #o174 (delete-region)
            1, // #o175 (narrow-to-region)
            1, // #o176 (widen)
            1, // #o177 (end-of-line)
            1, // #o200 (nil)
            3, // #o201 (constant2)
            3, // #o202 (goto)
            3, // #o203 (goto-if-nil)
            3, // #o204 (goto-if-not-nil)
            3, // #o205 (goto-if-nil-else-pop)
            3, // #o206 (goto-if-not-nil-else-pop)
            1, // #o207 (return)
            1, // #o210 (discard)
            1, // #o211 (dup)
            1, // #o212 (save-excursion)
            1, // #o213 (save-window-excursion*)
            1, // #o214 (save-restriction)
            1, // #o215 (catch*)
            1, // #o216 (unwind-protect)
            1, // #o217 (condition-case*)
            1, // #o220 (temp-output-buffer-setup*)
            1, // #o221 (temp-output-buffer-show*)
            1, // #o222 (nil)
            1, // #o223 (set-marker)
            1, // #o224 (match-beginning)
            1, // #o225 (match-end)
            1, // #o226 (upcase)
            1, // #o227 (downcase)
            1, // #o230 (string=)
            1, // #o231 (string<)
            1, // #o232 (equal)
            1, // #o233 (nthcdr)
            1, // #o234 (elt)
            1, // #o235 (member)
            1, // #o236 (assq)
            1, // #o237 (nreverse)
            1, // #o240 (setcar)
            1, // #o241 (setcdr)
            1, // #o242 (car-safe)
            1, // #o243 (cdr-safe)
            1, // #o244 (nconc)
            1, // #o245 (quo)
            1, // #o246 (rem)
            1, // #o247 (numberp)
            1, // #o250 (integerp)
            1, // #o251 (nil)
            1, // #o252 (nil)
            1, // #o253 (nil)
            1, // #o254 (nil)
            1, // #o255 (nil)
            1, // #o256 (nil)
            2, // #o257 (listN)
            2, // #o260 (concatN)
            2, // #o261 (insertN)
            2, // #o262 (stack-set)
            3, // #o263 (stack-set2)
            2, // #o264 (nil)
            2, // #o265 (nil)
            2, // #o266 (discardN)
            1, // #o267 (switch)
            1, // #o270 (nil)
            1, // #o271 (nil)
            1, // #o272 (nil)
            1, // #o273 (nil)
            1, // #o274 (nil)
            1, // #o275 (nil)
            1, // #o276 (nil)
            1, // #o277 (nil)
            1, // #o300 (constant)
            1, // #o301 (constant)
            1, // #o302 (constant)
            1, // #o303 (constant)
            1, // #o304 (constant)
            1, // #o305 (constant)
            1, // #o306 (constant)
            1, // #o307 (constant)
            1, // #o310 (constant)
            1, // #o311 (constant)
            1, // #o312 (constant)
            1, // #o313 (constant)
            1, // #o314 (constant)
            1, // #o315 (constant)
            1, // #o316 (constant)
            1, // #o317 (constant)
            1, // #o320 (constant)
            1, // #o321 (constant)
            1, // #o322 (constant)
            1, // #o323 (constant)
            1, // #o324 (constant)
            1, // #o325 (constant)
            1, // #o326 (constant)
            1, // #o327 (constant)
            1, // #o330 (constant)
            1, // #o331 (constant)
            1, // #o332 (constant)
            1, // #o333 (constant)
            1, // #o334 (constant)
            1, // #o335 (constant)
            1, // #o336 (constant)
            1, // #o337 (constant)
            1, // #o340 (constant)
            1, // #o341 (constant)
            1, // #o342 (constant)
            1, // #o343 (constant)
            1, // #o344 (constant)
            1, // #o345 (constant)
            1, // #o346 (constant)
            1, // #o347 (constant)
            1, // #o350 (constant)
            1, // #o351 (constant)
            1, // #o352 (constant)
            1, // #o353 (constant)
            1, // #o354 (constant)
            1, // #o355 (constant)
            1, // #o356 (constant)
            1, // #o357 (constant)
            1, // #o360 (constant)
            1, // #o361 (constant)
            1, // #o362 (constant)
            1, // #o363 (constant)
            1, // #o364 (constant)
            1, // #o365 (constant)
            1, // #o366 (constant)
            1, // #o367 (constant)
            1, // #o370 (constant)
            1, // #o371 (constant)
            1, // #o372 (constant)
            1, // #o373 (constant)
            1, // #o374 (constant)
            1, // #o375 (constant)
            1, // #o376 (constant)
            1, // #o377 (constant)
    };

    @CompilerDirectives.CompilationFinal(dimensions = 1)
    public static final byte[] BYTECODE_STACK_EFFECTS = new byte[]{
            0x7F, // #o000 (stack-ref)
            1, // #o001 (stack-ref)
            1, // #o002 (stack-ref)
            1, // #o003 (stack-ref)
            1, // #o004 (stack-ref)
            1, // #o005 (stack-ref)
            1, // #o006 (stack-ref)
            1, // #o007 (stack-ref)
            1, // #o010 (varref)
            1, // #o011 (varref)
            1, // #o012 (varref)
            1, // #o013 (varref)
            1, // #o014 (varref)
            1, // #o015 (varref)
            1, // #o016 (varref)
            1, // #o017 (varref)
            -1, // #o020 (varset)
            -1, // #o021 (varset)
            -1, // #o022 (varset)
            -1, // #o023 (varset)
            -1, // #o024 (varset)
            -1, // #o025 (varset)
            -1, // #o026 (varset)
            -1, // #o027 (varset)
            -1, // #o030 (varbind)
            -1, // #o031 (varbind)
            -1, // #o032 (varbind)
            -1, // #o033 (varbind)
            -1, // #o034 (varbind)
            -1, // #o035 (varbind)
            -1, // #o036 (varbind)
            -1, // #o037 (varbind)
            0, // #o040 (call)
            -1, // #o041 (call)
            -2, // #o042 (call)
            -3, // #o043 (call)
            -4, // #o044 (call)
            -5, // #o045 (call)
            0x7F, // #o046 (call)
            0x7F, // #o047 (call)
            0, // #o050 (unbind)
            0, // #o051 (unbind)
            0, // #o052 (unbind)
            0, // #o053 (unbind)
            0, // #o054 (unbind)
            0, // #o055 (unbind)
            0, // #o056 (unbind)
            0, // #o057 (unbind)
            0, // #o060 (pophandler)
            -1, // #o061 (pushconditioncase)
            -1, // #o062 (pushcatch)
            0x7F, // #o063 (nil)
            0x7F, // #o064 (nil)
            0x7F, // #o065 (nil)
            0x7F, // #o066 (nil)
            0x7F, // #o067 (nil)
            -1, // #o070 (nth)
            0, // #o071 (symbolp)
            0, // #o072 (consp)
            0, // #o073 (stringp)
            0, // #o074 (listp)
            -1, // #o075 (eq)
            -1, // #o076 (memq)
            0, // #o077 (not)
            0, // #o100 (car)
            0, // #o101 (cdr)
            -1, // #o102 (cons)
            0, // #o103 (list1)
            -1, // #o104 (list2)
            -2, // #o105 (list3)
            -3, // #o106 (list4)
            0, // #o107 (length)
            -1, // #o110 (aref)
            -2, // #o111 (aset)
            0, // #o112 (symbol-value)
            0, // #o113 (symbol-function)
            -1, // #o114 (set)
            -1, // #o115 (fset)
            -1, // #o116 (get)
            -2, // #o117 (substring)
            -1, // #o120 (concat2)
            -2, // #o121 (concat3)
            -3, // #o122 (concat4)
            0, // #o123 (sub1)
            0, // #o124 (add1)
            -1, // #o125 (eqlsign)
            -1, // #o126 (gtr)
            -1, // #o127 (lss)
            -1, // #o130 (leq)
            -1, // #o131 (geq)
            -1, // #o132 (diff)
            0, // #o133 (negate)
            -1, // #o134 (plus)
            -1, // #o135 (max)
            -1, // #o136 (min)
            -1, // #o137 (mult)
            1, // #o140 (point)
            0x7F, // #o141 (save-current-buffer*)
            0, // #o142 (goto-char)
            0, // #o143 (insert)
            1, // #o144 (point-max)
            1, // #o145 (point-min)
            0, // #o146 (char-after)
            1, // #o147 (following-char)
            1, // #o150 (preceding-char)
            1, // #o151 (current-column)
            0, // #o152 (indent-to)
            0x7F, // #o153 (scan-buffer*)
            1, // #o154 (eolp)
            1, // #o155 (eobp)
            1, // #o156 (bolp)
            1, // #o157 (bobp)
            1, // #o160 (current-buffer)
            0, // #o161 (set-buffer)
            0, // #o162 (save-current-buffer)
            0, // #o163 (set-mark*)
            1, // #o164 (interactive-p*)
            0, // #o165 (forward-char)
            0, // #o166 (forward-word)
            -1, // #o167 (skip-chars-forward)
            -1, // #o170 (skip-chars-backward)
            0, // #o171 (forward-line)
            0, // #o172 (char-syntax)
            -1, // #o173 (buffer-substring)
            -1, // #o174 (delete-region)
            -1, // #o175 (narrow-to-region)
            1, // #o176 (widen)
            0, // #o177 (end-of-line)
            0x7F, // #o200 (nil)
            1, // #o201 (constant2)
            0, // #o202 (goto)
            -1, // #o203 (goto-if-nil)
            -1, // #o204 (goto-if-not-nil)
            0x7F, // #o205 (goto-if-nil-else-pop)
            0x7F, // #o206 (goto-if-not-nil-else-pop)
            0x7F, // #o207 (return)
            -1, // #o210 (discard)
            1, // #o211 (dup)
            0, // #o212 (save-excursion)
            0x7F, // #o213 (save-window-excursion*)
            0x7F, // #o214 (save-restriction)
            0x7F, // #o215 (catch*)
            -1, // #o216 (unwind-protect)
            0x7F, // #o217 (condition-case*)
            0x7F, // #o220 (temp-output-buffer-setup*)
            0x7F, // #o221 (temp-output-buffer-show*)
            0x7F, // #o222 (nil)
            -2, // #o223 (set-marker)
            0, // #o224 (match-beginning)
            0, // #o225 (match-end)
            0, // #o226 (upcase)
            0, // #o227 (downcase)
            -1, // #o230 (string=)
            -1, // #o231 (string<)
            -1, // #o232 (equal)
            -1, // #o233 (nthcdr)
            -1, // #o234 (elt)
            -1, // #o235 (member)
            -1, // #o236 (assq)
            0, // #o237 (nreverse)
            -1, // #o240 (setcar)
            -1, // #o241 (setcdr)
            0, // #o242 (car-safe)
            0, // #o243 (cdr-safe)
            -1, // #o244 (nconc)
            -1, // #o245 (quo)
            -1, // #o246 (rem)
            0, // #o247 (numberp)
            0, // #o250 (integerp)
            0x7F, // #o251 (nil)
            0x7F, // #o252 (nil)
            0x7F, // #o253 (nil)
            0x7F, // #o254 (nil)
            0x7F, // #o255 (nil)
            0x7F, // #o256 (nil)
            0x7F, // #o257 (listN)
            0x7F, // #o260 (concatN)
            0x7F, // #o261 (insertN)
            -1, // #o262 (stack-set)
            -1, // #o263 (stack-set2)
            0x7F, // #o264 (nil)
            0x7F, // #o265 (nil)
            0x7F, // #o266 (discardN)
            -2, // #o267 (switch)
            0x7F, // #o270 (nil)
            0x7F, // #o271 (nil)
            0x7F, // #o272 (nil)
            0x7F, // #o273 (nil)
            0x7F, // #o274 (nil)
            0x7F, // #o275 (nil)
            0x7F, // #o276 (nil)
            0x7F, // #o277 (nil)
            1, // #o300 (constant)
            1, // #o301 (constant)
            1, // #o302 (constant)
            1, // #o303 (constant)
            1, // #o304 (constant)
            1, // #o305 (constant)
            1, // #o306 (constant)
            1, // #o307 (constant)
            1, // #o310 (constant)
            1, // #o311 (constant)
            1, // #o312 (constant)
            1, // #o313 (constant)
            1, // #o314 (constant)
            1, // #o315 (constant)
            1, // #o316 (constant)
            1, // #o317 (constant)
            1, // #o320 (constant)
            1, // #o321 (constant)
            1, // #o322 (constant)
            1, // #o323 (constant)
            1, // #o324 (constant)
            1, // #o325 (constant)
            1, // #o326 (constant)
            1, // #o327 (constant)
            1, // #o330 (constant)
            1, // #o331 (constant)
            1, // #o332 (constant)
            1, // #o333 (constant)
            1, // #o334 (constant)
            1, // #o335 (constant)
            1, // #o336 (constant)
            1, // #o337 (constant)
            1, // #o340 (constant)
            1, // #o341 (constant)
            1, // #o342 (constant)
            1, // #o343 (constant)
            1, // #o344 (constant)
            1, // #o345 (constant)
            1, // #o346 (constant)
            1, // #o347 (constant)
            1, // #o350 (constant)
            1, // #o351 (constant)
            1, // #o352 (constant)
            1, // #o353 (constant)
            1, // #o354 (constant)
            1, // #o355 (constant)
            1, // #o356 (constant)
            1, // #o357 (constant)
            1, // #o360 (constant)
            1, // #o361 (constant)
            1, // #o362 (constant)
            1, // #o363 (constant)
            1, // #o364 (constant)
            1, // #o365 (constant)
            1, // #o366 (constant)
            1, // #o367 (constant)
            1, // #o370 (constant)
            1, // #o371 (constant)
            1, // #o372 (constant)
            1, // #o373 (constant)
            1, // #o374 (constant)
            1, // #o375 (constant)
            1, // #o376 (constant)
            1, // #o377 (constant)
    };
}
