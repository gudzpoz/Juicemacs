#+title: A Piece Tree Implementation in Java

#+begin_quote
Actually, this implementation is a direct transliteration of the TypeScript
implementation from VS Code [[https://github.com/microsoft/vscode/blob/main/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.ts][pieceTreeBase.ts]]. For more information on piece
trees, see [[https://code.visualstudio.com/blogs/2018/03/23/text-buffer-reimplementation][the blog post from a VS Code developer]].
#+end_quote

Well, it was a transliteration. But we have now migrated from =java.lang.String=
to =TruffleString= to use code point offsets instead of UTF-16 char offsets.
Also, the performance degraded significantly after the switch.

* Some (Probably Badly Designed) Benchmarks

#+begin_html
<img src="./gap-buffer-rules.png" alt="Gap buffers are pretty good!" />
#+end_html

[[file:gap-buffer-rules.png][Gap buffers are pretty good!]]

The figure above shows the results of my (badly designed) benchmarks comparing
the performance of this implementation with a gap buffer implementation and a
rope. Precautions though:

1. The benchmarks are not performed with any warm-up, to hopefully capture worst
   cases.
2. Only our piece tree implementation keeps track of line counts, which might
   add a bit of overhead. (And the benchmark does not test line-based
   operations.)

Basically, if string concatenation is the only operation you need, a gap buffer
is probably the best choice (and the performance of plain string concatenation
is not that bad). But if you want to care about line numbers, you will need
something more complex, whether it is a [[https://github.com/CeleritasCelery/rune/blob/master/crates/text-buffer/src/metric.rs][metadata tree along a gap buffer]], or [[https://zed.dev/blog/zed-decoded-rope-sumtree][a
rope-like sum tree]]. As for me, writing a tree implementation from scratch /and/
making sure it works is simply too overwhelming, so I guess I will stick with
this piece of transliteration anyway.

* License

Both the original TypeScript implementation and this implementation are licensed
under the MIT license.

#+begin_quote
MIT License

Copyright (c) 2015 - present Microsoft Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
#+end_quote

#+begin_quote
Copyright 2024 gudzpoz

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the “Software”), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#+end_quote

* Developing

The Java code tries to be as close as possible to the TypeScript code, and we
provide [[file:./scripts/normalize-for-diff.py][a simple script]] to help "diff"ing between the two implementations. The
current version of the Java code is based on the TypeScript code from [[https://github.com/microsoft/vscode/commit/6b924c51528e663dda5091a1493229a361676aca][commit
6b924c5]].
